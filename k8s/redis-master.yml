apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-service
  labels:
    app: redis
spec:
  selector:
    matchLabels:
      app: redis
      role: master
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
        role: master
        tier: backend
    spec:
      containers:
        - name: master
          image: redis
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
            - containerPort: ${REDIS_PORT}
          env:
            - name: REDIS_PORT
              value: 6379
            - name: REDIS_PASS
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: REDIS_PASS
          args: ["--requirepass", "$(REDIS_PASS)"]
          volumeMounts:
            - mountPath: "/data"
              name: redis-data
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: pvc-redis
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  labels:
    app: redis
    role: master
    tier: backend
spec:
  ports:
    - port: ${REDIS_PORT}
      targetPort: ${REDIS_PORT}
  selector:
    app: redis
    role: master
    tier: backend
  env:
    - name: REDIS_PORT
      value: 6379

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-redis
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: redis-service
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: redis-service
  minReplicas: 1
  maxReplicas: 12
  metrics:
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 60
